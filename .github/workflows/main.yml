name: Free RDP via Ngrok

on: [push]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Download ngrok
        run: |
          Invoke-WebRequest https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip

      - name: Unzip ngrok
        run: Expand-Archive ngrok.zip -DestinationPath .

      - name: Connect ngrok (start RDP tunnel)
        run: |
          ./ngrok.exe authtoken 2wCX0ooIzCpg1KPtQjSPDGfnQX1_aghi9eszYBJdyVtxNRBh
          Start-Process -NoNewWindow -FilePath ./ngrok.exe -ArgumentList "tcp 3389 --log=stdout > ngrok.log" 
          Start-Sleep -Seconds 10

      - name: Show ngrok TCP address
        run: |
          Get-Content ngrok.log | Select-String "tcp://" | Select-Object -Last 1          }
          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV
      
      - name: Verify RDP Accessibility
        run: |
          Write-Host "Tailscale IP: $env:TAILSCALE_IP"
          
          # Test connectivity using Test-NetConnection against the Tailscale IP on port 3389
          $testResult = Test-NetConnection -ComputerName $env:TAILSCALE_IP -Port 3389
          if (-not $testResult.TcpTestSucceeded) {
              Write-Error "TCP connection to RDP port 3389 failed"
              exit 1
          }
          Write-Host "TCP connectivity successful!"

      - name: Maintain Connection
        run: |
          Write-Host "`n=== RDP ACCESS ==="
          Write-Host "Address: $env:TAILSCALE_IP"
          Write-Host "Username: RDP"
          Write-Host "Password: $(echo $env:RDP_CREDS)"
          Write-Host "==================`n"
          
          # Keep runner active indefinitely (or until manually cancelled)
          while ($true) {
              Write-Host "[$(Get-Date)] RDP Active - Use Ctrl+C in workflow to terminate"
              Start-Sleep -Seconds 300
          }
